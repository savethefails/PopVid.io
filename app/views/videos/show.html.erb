<!-- <p id="notice"><%= notice %></p>

<p>
  <b>Youtube:</b>
  <%= @video.youtube_id %>
</p>


<%= link_to 'Edit', edit_video_path(@video) %> |
<%= link_to 'Back', videos_path %>
 -->

 <div id="comments_area"><div id="player"></div></div>

    <script>
    //Raw denim 8-bit hoodie vegan kogi tattooed, organic retro. Sustainable williamsburg umami fixie truffaut, yr semiotics fanny pack sartorial pickled mumblecore banksy pitchfork mixtape. Retro portland readymade williamsburg, whatever mustache mcsweeney's street art seitan direct trade photo booth. Vegan flexitarian retro brooklyn PBR wayfarers. Messenger bag lomo readymade, ennui freegan ethical authentic put a bird on it pork belly. Wayfarers blog lo-fi, quinoa scenester retro vice food truck chillwave occupy cardigan post-ironic pinterest readymade. Banksy hoodie flexitarian, you probably haven't heard of them single-origin coffee narwhal skateboard mumblecore pinterest tofu.
    var text=[];
    text.push("Raw denim 8-bit hoodie vegan kogi");
    text.push("Sustainable williamsburg umami fixie");
    text.push("Vegan flexitarian retro brooklyn");
    text.push("Messenger bag lomo readymade");
    text.push("Banksy hoodie flexitarian");
    text.push("Wayfarers blog lo-fi");
    text.push("Retro portland readymade williamsburg");
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');
      tag.src = "//www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: 'u1zgFlCw8Aw',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
        $(function(){
          $('<div/>').attr('id','comments').html("<h1></h1>").prependTo($('#comments_area'));
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        //event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      var timerID=0;
      function onPlayerStateChange(event) {
        console.log(text);
        if (event.data == YT.PlayerState.PLAYING){
          comment=text[Math.floor(Math.random()*text.length)];
            $('#comments h1').text(comment);
          timerID=setInterval(function(){
            comment=text[Math.floor(Math.random()*text.length)];
            $('#comments h1').text(comment);
          },3000);
        }
        else {
          clearInterval(timerID);
        }
        
        // if (event.data == YT.PlayerState.PLAYING && !done) {
        //   setTimeout(stopVideo, 6000);
        //   done = true;
        // }
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>